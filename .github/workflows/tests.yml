name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: smart_shopping_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Create test environment file
      run: |
        cat > .env.test << EOF
        TEST_AWS_DB_HOST=localhost
        TEST_AWS_DB_PORT=5432
        TEST_AWS_DB_NAME=smart_shopping_test
        TEST_AWS_DB_USER=test_user
        TEST_AWS_DB_PASSWORD=test_password
        TEST_JWT_SECRET_KEY=test-secret-key-for-github-actions
        TEST_JWT_ALGORITHM=HS256
        TEST_JWT_EXPIRATION_HOURS=1
        TEST_HOST=127.0.0.1
        TEST_PORT=8889
        TEST_ENVIRONMENT=test
        EOF
    
    - name: Run unit tests
      run: |
        python -m pytest tests/unit/ -v --tb=short --junitxml=test-results-unit.xml
    
    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v --tb=short --junitxml=test-results-integration.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: test-results-*.xml

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
    
    - name: Run black
      run: black --check .
    
    - name: Run flake8
      run: flake8 .
    
    - name: Run mypy
      run: mypy . --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      if: always()
      with:
        sarif-file: 'security-scan-results.sarif'
